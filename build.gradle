import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

buildscript {
	ext {
		dockerBuildDir = 'build/docker/'
	}
}

plugins {
	id 'com.bmuschko.docker-remote-api' version '6.6.1'
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

ext.commitSha = {->
	'git rev-parse --verify --short HEAD'.execute().text.trim()
}

group = 'com.valb3r'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.neo4j:neo4j-ogm-bolt-native-types:3.2.5'
	implementation 'org.neo4j:neo4j-cypher-dsl:2020.1.1'
	implementation 'org.springdoc:springdoc-openapi-ui:1.4.8'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.4.8'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

bootJar {
	enabled = true
	mainClassName = 'com.valb3r.nerp.NerpApplication'
}

jar {
	version = project.version
	enabled = true
}

test {
	useJUnitPlatform()
}

task syncJar(type: Copy) {
	dependsOn bootJar
	from "${buildDir}/${libsDirName}"
	into dockerBuildDir
}

task createDockerfile(type: Dockerfile) {
	def cmd = "/app/nerp-${commitSha()}.jar";
	from 'openjdk:11.0.8-jre-slim'
	label(['maintainer': 'Valentyn Berezin'])
	copyFile(jar.archiveFileName.get(), cmd)
	entryPoint('java')
	defaultCommand('-jar', cmd)
	exposePort(8080)
}


task buildImage(type: DockerBuildImage) {
	dependsOn createDockerfile, syncJar
	inputDir.set(project.file(dockerBuildDir))
	images.add("nerp/nerp:${commitSha()}")
}
